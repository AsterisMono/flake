{
  config,
  pkgs,
  lib,
  ...
}:
let
  inherit (lib) mkOption types;
  cfg = config.noa.dn42;
  peerOpts = _: {
    options = {
      endpoint = mkOption {
        example = "***REMOVED***";
        type = types.str;
        description = ''
          The endpoint of the peer.
        '';
      };
      port = mkOption {
        example = 20833;
        type = types.int;
        description = ''
          The port wireguard should connect to.
        '';
      };
      pubkey = mkOption {
        example = "***REMOVED***";
        type = types.str;
        description = ''
          The pubkey of the peer.
        '';
      };
      ipv6Addrs = mkOption {
        example = [ "ee80:759::2323/64" ];
        type = types.listOf types.str;
        description = ''
          The ipv6 addresses of the peer.
        '';
      };
      ipv4Addrs = mkOption {
        example = [ "172.22.76.185" ];
        type = types.listOf types.str;
        description = ''
          The ipv4 addresses of the peer.
        '';
      };
    };
  };
  generateInterfaces =
    asn: values:
    lib.nameValuePair "dn42-${asn}" {
    };
in
{
  options = {
    noa.dn42 = {
      peers = mkOption {
        description = "DN42 Peers";
        default = { };
        example = {
          "AS4242422323" = {
            endpoint = "***REMOVED***";
            port = 20833;
            pubkey = "***REMOVED***";
            ipv6Addrs = [ "ee80:759::2323/64" ];
          };
        };
        type = with types; attrsOf (submodule peerOpts);
      };
      privateKeyFile = mkOption {
        default = null;
        type = types.str;
        description = ''
          Private key file as generated by {command}`wg genkey`.
        '';
      };
    };
  };

  config = lib.mkIf (cfg.peers != { }) {

  };
}
